{"version":3,"file":"index.es.js","sources":["../src/utils.ts","../src/index.ts"],"sourcesContent":["// Generate a random number between 1-9999, or whatever max-value you specify.\nexport const randomNumber = (max = 9999) => Math.floor(Math.random() * max)\n\n// This function was borrowed from:\n// jlevy / simple-hash.js\n// https://gist.github.com/jlevy/c246006675becc446360a798e2b2d781\n// This is an insecure 32-bit algorithm that will always be 7 chars long.\nexport function hash(str: string) {\n  let hash = 0\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i)\n    hash = (hash << 5) - hash + char\n  }\n  // Convert to 32bit unsigned integer in base 36 and pad with \"0\" to ensure length is 7.\n  return (hash >>> 0).toString(36).padStart(7, '0')\n}\n\n// Will generate a random hash with a length of 35 chars. using the above\n// insecure 32-bit algorithm.\nexport const randomHash = () =>\n  [1, 2, 3, 4, 5].reduce((prev) => prev + hash(Math.random().toString()), '')\n\n// This function was borrowed from:\n// (commented by user: tiagofrancafernandes)\n// https://gist.github.com/hyamamoto/fd435505d29ebfa3d9716fd2be8d42f0?permalink_comment_id=4466912#gistcomment-4466912\n// Will generate a random Uuid v4 string.\nexport const randomUuid = () =>\n  String('xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx').replace(\n    /[xy]/g,\n    (character) => {\n      const random = (Math.random() * 16) | 0\n      const value = character === 'x' ? random : (random & 0x3) | 0x8\n\n      return value.toString(16)\n    }\n  )\n\nexport function deepClone<T>(source: T): T {\n  if (source === null || typeof source !== 'object') return source\n\n  const clone: unknown = Array.isArray(source) ? [] : {}\n\n  for (const key in source)\n    if (Object.prototype.hasOwnProperty.call(source, key))\n      (clone as T)[key] = deepClone(source[key])\n\n  return clone as T\n}\n","import { Path, PathValue, pathSetImmutable } from 'object-standard-path'\nimport { deepClone } from './utils'\nexport { randomNumber, randomHash, randomUuid, hash } from './utils'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Entity = { [key: string]: any }\n\nexport type Recipe<T extends EntityClass> = (entity: T) => T\n\nclass EntityClass<T extends Entity = object> {\n  private entity: T\n\n  constructor(entity: T) {\n    this.entity = deepClone(entity)\n  }\n\n  set(changes: Partial<T>) {\n    const clone = deepClone(this.entity)\n\n    for (const key of Object.keys(changes) as (keyof typeof changes)[])\n      clone[key as keyof typeof clone] = changes[\n        key\n      ] as (typeof clone)[keyof typeof clone]\n\n    return new EntityClass(clone)\n  }\n\n  setPath<P extends Path<T, ''>>(path: P, value: PathValue<T, P>) {\n    return new EntityClass(pathSetImmutable(this.entity, path, value))\n  }\n\n  recipe(recipeCallback: Recipe<EntityClass<T>>) {\n    return recipeCallback(this)\n  }\n\n  get() {\n    return deepClone(this.entity)\n  }\n}\n\nexport function entity<T extends Entity>(entity: T) {\n  return new EntityClass<T>(entity)\n}\n"],"names":["randomNumber","max","hash","str","i","char","randomHash","prev","randomUuid","character","random","deepClone","source","clone","key","EntityClass","entity","changes","path","value","pathSetImmutable","recipeCallback"],"mappings":";AACa,MAAAA,IAAe,CAACC,IAAM,SAAS,KAAK,MAAM,KAAK,OAAO,IAAIA,CAAG;AAMnE,SAASC,EAAKC,GAAa;AAChC,MAAID,IAAO;AACX,WAASE,IAAI,GAAGA,IAAID,EAAI,QAAQC,KAAK;AAC7B,UAAAC,IAAOF,EAAI,WAAWC,CAAC;AAC7BF,IAAAA,KAAQA,KAAQ,KAAKA,IAAOG;AAAA,EAC9B;AAEA,UAAQH,MAAS,GAAG,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG;AAClD;AAIa,MAAAI,IAAa,MACxB,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,OAAO,CAACC,MAASA,IAAOL,EAAK,KAAK,OAAA,EAAS,SAAS,CAAC,GAAG,EAAE,GAM/DM,IAAa,MACjB,uCAAwC;AAAA,EAC7C;AAAA,EACA,CAACC,MAAc;AACb,UAAMC,IAAU,KAAK,OAAO,IAAI,KAAM;AAG/B,YAFOD,MAAc,MAAMC,IAAUA,IAAS,IAAO,GAE/C,SAAS,EAAE;AAAA,EAC1B;AACF;AAEK,SAASC,EAAaC,GAAc;AACzC,MAAIA,MAAW,QAAQ,OAAOA,KAAW,SAAiB,QAAAA;AAE1D,QAAMC,IAAiB,MAAM,QAAQD,CAAM,IAAI,KAAK;AAEpD,aAAWE,KAAOF;AAChB,IAAI,OAAO,UAAU,eAAe,KAAKA,GAAQE,CAAG,MACjDD,EAAYC,CAAG,IAAIH,EAAUC,EAAOE,CAAG,CAAC;AAEtC,SAAAD;AACT;ACtCA,MAAME,EAAuC;AAAA,EAG3C,YAAYC,GAAW;AAChB,SAAA,SAASL,EAAUK,CAAM;AAAA,EAChC;AAAA,EAEA,IAAIC,GAAqB;AACjB,UAAAJ,IAAQF,EAAU,KAAK,MAAM;AAExB,eAAAG,KAAO,OAAO,KAAKG,CAAO;AAC7B,MAAAJ,EAAAC,CAAyB,IAAIG,EACjCH,CACF;AAEK,WAAA,IAAIC,EAAYF,CAAK;AAAA,EAC9B;AAAA,EAEA,QAA+BK,GAASC,GAAwB;AAC9D,WAAO,IAAIJ,EAAYK,EAAiB,KAAK,QAAQF,GAAMC,CAAK,CAAC;AAAA,EACnE;AAAA,EAEA,OAAOE,GAAwC;AAC7C,WAAOA,EAAe,IAAI;AAAA,EAC5B;AAAA,EAEA,MAAM;AACG,WAAAV,EAAU,KAAK,MAAM;AAAA,EAC9B;AACF;AAEO,SAASK,EAAyBA,GAAW;AAC3C,SAAA,IAAID,EAAeC,CAAM;AAClC;"}